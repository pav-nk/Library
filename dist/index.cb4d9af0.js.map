{"mappings":"ACCA,MAAM,EAAO,SAAS,IAAI,CAAC,aAAa,CAAC,gBACnC,EAAiB,SAAS,IAAI,CAAC,aAAa,CAAC,mBAC7C,EAAsB,SAAS,IAAI,CAAC,aAAa,CAAC,mBAExD,IAAI,EAAY,EAAE,CAElB,SAAS,EAAK,CAAE,CAAE,CAAI,CAAE,CAAM,CAAE,CAAM,EACpC,IAAI,CAAC,EAAE,CAAG,EACV,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,YAAY,CAAG,WAClB,IAAI,CAAC,MAAM,CAAG,AAAgB,SAAhB,IAAI,CAAC,MAAM,CAAc,SAAW,MACpD,CACF,CAmEA,EAAK,gBAAgB,CAAC,SAAU,AAAC,IAC/B,EAAM,cAAc,GACpB,AAnEF,SAA0B,CAAK,EAE7B,IAAM,EAAc,OAAO,WAAW,CADrB,IAAI,SAAS,EAAM,MAAM,EAE1C,CAAA,EAAY,EAAE,CAAG,EAAU,MAAM,CAAG,EACpC,GAAM,CAAE,GAAA,CAAE,CAAE,KAAA,CAAI,CAAE,OAAA,CAAM,CAAE,OAAA,CAAM,CAAE,CAAG,EAC/B,EAAU,IAAI,EAAK,EAAI,EAAM,EAAQ,GAC3C,EAAU,IAAI,CAAC,GACf,EAAM,MAAM,CAAC,KAAK,GAClB,AAMF,SAAoB,CAAO,EACzB,GAAM,CAAE,GAAA,CAAE,CAAE,KAAA,CAAI,CAAE,OAAA,CAAM,CAAE,OAAA,CAAM,CAAE,CAAG,EACrC,EAAe,kBAAkB,CAC/B,YACA,CAAC;wCACmC,EAAE,EAAG;YACjC,EAAE,EAAK;YACP,EAAE,EAAO;kDAC6B,EAAE,EAAO;;;IAGvD,CAAC,CAEL,EAnBa,GACX,AAoBF,SAA4B,CAAE,EAC5B,IAAM,EAAmB,SAAS,aAAa,CAC7C,CAAC,UAAU,EAAE,EAAG,kBAAkB,CAAC,EAErC,QAAQ,GAAG,CAAC,GACZ,EAAiB,gBAAgB,CAAC,QAAS,KAEzC,AADoB,EAAiB,OAAO,CAAC,kBACjC,MAAM,GAClB,EAAY,EAAU,MAAM,CAAC,AAAC,GAAS,EAAK,EAAE,GAAK,EACrD,EACF,EA9BqB,GACnB,AA+BF,SAAkC,CAAE,EAClC,IAAM,EAAmB,SAAS,aAAa,CAC7C,CAAC,UAAU,EAAE,EAAG,kBAAkB,CAAC,EAErC,EAAiB,gBAAgB,CAAC,QAAS,KACzC,EAAiB,WAAW,CAC1B,AAAiC,SAAjC,EAAiB,WAAW,CAAc,SAAW,OACvD,EAAY,EAAU,GAAG,CAAC,AAAC,IACrB,EAAK,EAAE,GAAK,GACd,EAAK,YAAY,GAEZ,GAEX,EACF,EA7C2B,GAgDzB,EAAoB,gBAAgB,CAAC,QAAS,KAC5C,EAAK,KAAK,GACV,EAAY,EAAE,CACd,EAAe,SAAS,CAAG,EAC7B,EAlDF,EAuDmB,EACnB","sources":["<anon>","src/script.js"],"sourcesContent":["// nodes\nconst form = document.body.querySelector(\".entry-field\");\nconst booksContainer = document.body.querySelector(\".library__items\");\nconst deleteLibraryButton = document.body.querySelector(\".button--delete\");\nlet myLibrary = [];\nfunction Book(id, name, author, status) {\n    this.id = id;\n    this.name = name;\n    this.author = author;\n    this.status = status;\n    this.toggleStatus = function() {\n        this.status = this.status === \"read\" ? \"unread\" : \"read\";\n    };\n}\nfunction addBookToLibrary(event) {\n    const formData = new FormData(event.target);\n    const newBookData = Object.fromEntries(formData);\n    newBookData.id = myLibrary.length + 1;\n    const { id, name, author, status } = newBookData;\n    const newBook = new Book(id, name, author, status);\n    myLibrary.push(newBook);\n    event.target.reset();\n    renderBook(newBook);\n    addDeleteBookEvent(id);\n    addToggleStatusBookEvent(id);\n    addEventDeleteLibrary();\n}\nfunction renderBook(newBook) {\n    const { id, name, author, status } = newBook;\n    booksContainer.insertAdjacentHTML(\"beforeend\", `\n      <tr class=\"library__item\" data-id=${id}>\n        <td>${name}</td>\n        <td>${author}</td>\n        <td><button class=\"button button--status\">${status}</button></td>\n        <td><button class=\"button button--remove\">delete</button></td>\n      </tr>\n    `);\n}\nfunction addDeleteBookEvent(id) {\n    const removeCurrentBtn = document.querySelector(`[data-id='${id}'] .button--remove`);\n    console.log(removeCurrentBtn);\n    removeCurrentBtn.addEventListener(\"click\", ()=>{\n        const currentBook = removeCurrentBtn.closest(\".library__item\");\n        currentBook.remove();\n        myLibrary = myLibrary.filter((item)=>item.id !== id);\n    });\n}\nfunction addToggleStatusBookEvent(id) {\n    const statusCurrentBtn = document.querySelector(`[data-id='${id}'] .button--status`);\n    statusCurrentBtn.addEventListener(\"click\", ()=>{\n        statusCurrentBtn.textContent = statusCurrentBtn.textContent === \"read\" ? \"unread\" : \"read\";\n        myLibrary = myLibrary.map((item)=>{\n            if (item.id === id) item.toggleStatus();\n            return item;\n        });\n    });\n}\nfunction addEventDeleteLibrary() {\n    deleteLibraryButton.addEventListener(\"click\", ()=>{\n        form.reset();\n        myLibrary = [];\n        booksContainer.innerHTML = \"\";\n    });\n}\nform.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    addBookToLibrary(event);\n});\n\n//# sourceMappingURL=index.cb4d9af0.js.map\n","// nodes\nconst form = document.body.querySelector(\".entry-field\");\nconst booksContainer = document.body.querySelector(\".library__items\");\nconst deleteLibraryButton = document.body.querySelector(\".button--delete\");\n\nlet myLibrary = [];\n\nfunction Book(id, name, author, status) {\n  this.id = id;\n  this.name = name;\n  this.author = author;\n  this.status = status;\n  this.toggleStatus = function () {\n    this.status = this.status === \"read\" ? \"unread\" : \"read\";\n  };\n}\n\nfunction addBookToLibrary(event) {\n  const formData = new FormData(event.target);\n  const newBookData = Object.fromEntries(formData);\n  newBookData.id = myLibrary.length + 1;\n  const { id, name, author, status } = newBookData;\n  const newBook = new Book(id, name, author, status);\n  myLibrary.push(newBook);\n  event.target.reset();\n  renderBook(newBook);\n  addDeleteBookEvent(id);\n  addToggleStatusBookEvent(id);\n  addEventDeleteLibrary();\n}\n\nfunction renderBook(newBook) {\n  const { id, name, author, status } = newBook;\n  booksContainer.insertAdjacentHTML(\n    \"beforeend\",\n    `\n      <tr class=\"library__item\" data-id=${id}>\n        <td>${name}</td>\n        <td>${author}</td>\n        <td><button class=\"button button--status\">${status}</button></td>\n        <td><button class=\"button button--remove\">delete</button></td>\n      </tr>\n    `\n  );\n}\n\nfunction addDeleteBookEvent(id) {\n  const removeCurrentBtn = document.querySelector(\n    `[data-id='${id}'] .button--remove`\n  );\n  console.log(removeCurrentBtn);\n  removeCurrentBtn.addEventListener(\"click\", () => {\n    const currentBook = removeCurrentBtn.closest(\".library__item\");\n    currentBook.remove();\n    myLibrary = myLibrary.filter((item) => item.id !== id);\n  });\n}\n\nfunction addToggleStatusBookEvent(id) {\n  const statusCurrentBtn = document.querySelector(\n    `[data-id='${id}'] .button--status`\n  );\n  statusCurrentBtn.addEventListener(\"click\", () => {\n    statusCurrentBtn.textContent =\n      statusCurrentBtn.textContent === \"read\" ? \"unread\" : \"read\";\n    myLibrary = myLibrary.map((item) => {\n      if (item.id === id) {\n        item.toggleStatus();\n      }\n      return item;\n    });\n  });\n}\n\nfunction addEventDeleteLibrary() {\n  deleteLibraryButton.addEventListener(\"click\", () => {\n    form.reset();\n    myLibrary = [];\n    booksContainer.innerHTML = \"\";\n  });\n}\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  addBookToLibrary(event);\n});\n"],"names":["form","document","body","querySelector","booksContainer","deleteLibraryButton","myLibrary","Book","id","name","author","status","toggleStatus","addEventListener","event","preventDefault","addBookToLibrary","newBookData","Object","fromEntries","FormData","target","length","newBook","push","reset","renderBook","insertAdjacentHTML","addDeleteBookEvent","removeCurrentBtn","console","log","currentBook","closest","remove","filter","item","addToggleStatusBookEvent","statusCurrentBtn","textContent","map","innerHTML"],"version":3,"file":"index.cb4d9af0.js.map"}