const t=document.body.querySelector(".entry-field"),e=document.body.querySelector(".library__items"),r=document.body.querySelector(".button--delete"),a=document.body.querySelector(".error-message");class s{constructor(t,e,r,a){this.id=t,this.name=e,this.author=r,this.status=a}getId(){return this.id}toggleStatus(){this.status="read"===this.status?"unread":"read"}render(){let{id:t,name:r,author:a,status:s}=this;e.insertAdjacentHTML("beforeend",`
      <tr class="library__item" data-id=${t}>
        <td>${r}</td>
        <td>${a}</td>
        <td><button class="button button--status">${s}</button></td>
        <td><button class="button button--remove">delete</button></td>
      </tr>
    `)}addHandlers(t){let e=document.querySelector(`[data-id='${this.id}'] .button--remove`),r=document.querySelector(`[data-id='${this.id}'] .button--status`);e.addEventListener("click",()=>{e.closest(".library__item").remove(),t("remove",this.id)}),r.addEventListener("click",()=>{r.textContent="read"===r.textContent?"unread":"read",t("toggle",this.id)})}}new class{constructor(){this.storage=[]}updateLocalStorage(){localStorage.storage=JSON.stringify(this.storage)}deleteLocalStorage(){localStorage.storage=JSON.stringify([])}updateErrorMessage(t=""){a.textContent=t}updateStorage(t,e){"remove"===t&&(this.storage=this.storage.filter(t=>t.id!==e)),"toggle"===t&&(this.storage=this.storage.map(t=>(t.id===e&&t.toggleStatus(),t))),this.updateLocalStorage()}addBook(t){let e=Object.fromEntries(new FormData(t.target));e.id=this.storage.length+1;let{id:r,name:a,author:o,status:d}=e;if(""===a||""===o){this.updateErrorMessage("Error: fill in all fields of the form");return}this.updateErrorMessage();let i=new s(r,a,o,d);this.storage.push(i),t.target.reset(),i.render(),i.addHandlers(this.updateStorage.bind(this)),this.updateLocalStorage()}addHandlers(){r.addEventListener("click",()=>{t.reset(),this.storage=[],e.innerHTML="",this.deleteLocalStorage()}),t.addEventListener("submit",t=>{t.preventDefault(),this.addBook(t)})}init(){let t=localStorage.storage;t&&(this.storage=JSON.parse(t).map(t=>{let{id:e,name:r,author:a,status:o}=t,d=new s(e,r,a,o);return d.render(),d.addHandlers(this.updateStorage.bind(this)),d})),t||(localStorage.storage=JSON.stringify([])),this.addHandlers()}}().init();
//# sourceMappingURL=index.1e166fb4.js.map
