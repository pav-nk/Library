{"mappings":"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","sources":["src/script.js"],"sourcesContent":["// nodes\nconst form = document.body.querySelector(\".entry-field\");\nconst booksContainer = document.body.querySelector(\".library__items\");\nconst deleteBtn = document.body.querySelector(\".button--delete\");\nconst errorMessage = document.body.querySelector(\".error-message\");\nclass Book {\n  constructor(id, name, author, status) {\n    this.id = id;\n    this.name = name;\n    this.author = author;\n    this.status = status;\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  toggleStatus() {\n    this.status = this.status === \"read\" ? \"unread\" : \"read\";\n  }\n\n  render() {\n    const { id, name, author, status } = this;\n    booksContainer.insertAdjacentHTML(\n      \"beforeend\",\n      `\n      <tr class=\"library__item\" data-id=${id}>\n        <td>${name}</td>\n        <td>${author}</td>\n        <td><button class=\"button button--status\">${status}</button></td>\n        <td><button class=\"button button--remove\">delete</button></td>\n      </tr>\n    `\n    );\n  }\n\n  addHandlers(updateStorage) {\n    const removeCurrentBtn = document.querySelector(\n      `[data-id='${this.id}'] .button--remove`\n    );\n    const statusCurrentBtn = document.querySelector(\n      `[data-id='${this.id}'] .button--status`\n    );\n    removeCurrentBtn.addEventListener(\"click\", () => {\n      const currentBook = removeCurrentBtn.closest(\".library__item\");\n      currentBook.remove();\n      updateStorage(\"remove\", this.id);\n    });\n    statusCurrentBtn.addEventListener(\"click\", () => {\n      statusCurrentBtn.textContent =\n        statusCurrentBtn.textContent === \"read\" ? \"unread\" : \"read\";\n      updateStorage(\"toggle\", this.id);\n    });\n  }\n}\nclass Library {\n  constructor() {\n    this.storage = [];\n  }\n\n  updateLocalStorage() {\n    localStorage.storage = JSON.stringify(this.storage);\n  }\n\n  deleteLocalStorage() {\n    localStorage.storage = JSON.stringify([]);\n  }\n\n  updateErrorMessage(message = \"\") {\n    errorMessage.textContent = message;\n  }\n\n  updateStorage(action, id) {\n    if (action === \"remove\") {\n      this.storage = this.storage.filter((item) => item.id !== id);\n    }\n    if (action === \"toggle\") {\n      this.storage = this.storage.map((item) => {\n        if (item.id === id) {\n          item.toggleStatus();\n        }\n        return item;\n      });\n    }\n    this.updateLocalStorage();\n  }\n\n  addBook(event) {\n    const formData = new FormData(event.target);\n    const newBookData = Object.fromEntries(formData);\n    newBookData.id = this.storage.length + 1;\n    const { id, name, author, status } = newBookData;\n    if (name === \"\" || author === \"\") {\n      this.updateErrorMessage(\"Error: fill in all fields of the form\");\n      return;\n    }\n    this.updateErrorMessage();\n    const book = new Book(id, name, author, status);\n    this.storage.push(book);\n    event.target.reset();\n    book.render();\n    book.addHandlers(this.updateStorage.bind(this));\n    this.updateLocalStorage();\n  }\n\n  addHandlers() {\n    deleteBtn.addEventListener(\"click\", () => {\n      form.reset();\n      this.storage = [];\n      booksContainer.innerHTML = \"\";\n      this.deleteLocalStorage();\n    });\n    form.addEventListener(\"submit\", (event) => {\n      event.preventDefault();\n      this.addBook(event);\n    });\n  }\n\n  init() {\n    const localData = localStorage.storage;\n    if (localData) {\n      this.storage = JSON.parse(localData).map((item) => {\n        const { id, name, author, status } = item;\n        const book = new Book(id, name, author, status);\n        book.render();\n        book.addHandlers(this.updateStorage.bind(this));\n        return book;\n      });\n    }\n    if (!localData) {\n      localStorage.storage = JSON.stringify([]);\n    }\n    this.addHandlers();\n  }\n}\n\nconst newLibrary = new Library();\n\nnewLibrary.init();\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}