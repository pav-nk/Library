{"mappings":"AAAA,QAAQ;AACR,MAAM,OAAO,SAAS,IAAI,CAAC,aAAa,CAAC;AACzC,MAAM,iBAAiB,SAAS,IAAI,CAAC,aAAa,CAAC;AACnD,MAAM,sBAAsB,SAAS,IAAI,CAAC,aAAa,CAAC;AACxD,MAAM,eAAe,SAAS,IAAI,CAAC,aAAa,CAAC;AAEjD,IAAI,YAAY,EAAE;AAElB,SAAS,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM;IACpC,IAAI,CAAC,EAAE,GAAG;IACV,IAAI,CAAC,IAAI,GAAG;IACZ,IAAI,CAAC,MAAM,GAAG;IACd,IAAI,CAAC,MAAM,GAAG;IACd,IAAI,CAAC,YAAY,GAAG;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,SAAS,WAAW;IACpD;AACF;AAEA,SAAS,iBAAiB,KAAK;IAC7B,MAAM,WAAW,IAAI,SAAS,MAAM,MAAM;IAC1C,MAAM,cAAc,OAAO,WAAW,CAAC;IACvC,YAAY,EAAE,GAAG,UAAU,MAAM,GAAG;IACpC,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG;IACrC,QAAQ,GAAG,CAAC,MAAM;IAClB,IAAI,SAAS,MAAM,WAAW,IAAI;QAChC,aAAa,WAAW,GAAG;QAC3B;IACF;IACA,aAAa,WAAW,GAAG;IAC3B,MAAM,UAAU,IAAI,KAAK,IAAI,MAAM,QAAQ;IAC3C,UAAU,IAAI,CAAC;IACf,MAAM,MAAM,CAAC,KAAK;IAClB,WAAW;IACX,mBAAmB;IACnB,yBAAyB;IACzB;AACF;AAEA,SAAS,WAAW,OAAO;IACzB,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG;IACrC,eAAe,kBAAkB,CAC/B,aACA,CAAC;wCACmC,EAAE,GAAG;YACjC,EAAE,KAAK;YACP,EAAE,OAAO;kDAC6B,EAAE,OAAO;;;IAGvD,CAAC;AAEL;AAEA,SAAS,mBAAmB,EAAE;IAC5B,MAAM,mBAAmB,SAAS,aAAa,CAC7C,CAAC,UAAU,EAAE,GAAG,kBAAkB,CAAC;IAErC,iBAAiB,gBAAgB,CAAC,SAAS;QACzC,MAAM,cAAc,iBAAiB,OAAO,CAAC;QAC7C,YAAY,MAAM;QAClB,YAAY,UAAU,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;QACnD;IACF;AACF;AAEA,SAAS,yBAAyB,EAAE;IAClC,MAAM,mBAAmB,SAAS,aAAa,CAC7C,CAAC,UAAU,EAAE,GAAG,kBAAkB,CAAC;IAErC,iBAAiB,gBAAgB,CAAC,SAAS;QACzC,iBAAiB,WAAW,GAC1B,iBAAiB,WAAW,KAAK,SAAS,WAAW;QACvD,YAAY,UAAU,GAAG,CAAC,CAAC;YACzB,IAAI,KAAK,EAAE,KAAK,IACd,KAAK,YAAY;YAEnB,OAAO;QACT;QACA;IACF;AACF;AAEA,SAAS;IACL,aAAa,SAAS,GAAG,KAAK,SAAS,CAAC;AAC5C;AAEA,SAAS;IACL,aAAa,SAAS,GAAG,KAAK,SAAS,CAAC,EAAE;AAC9C;AAEA,KAAK,gBAAgB,CAAC,UAAU,CAAC;IAC/B,MAAM,cAAc;IACpB,iBAAiB;AACnB;AAEA,oBAAoB,gBAAgB,CAAC,SAAS;IAC1C,KAAK,KAAK;IACV,YAAY,EAAE;IACd,eAAe,SAAS,GAAG;IAC3B;AACJ;AAEA,SAAS;IACL,MAAM,YAAY,aAAa,SAAS;IACxC,IAAI,WAAW;QACX,YAAY,KAAK,KAAK,CAAC,aAAa,SAAS;QAC7C,KAAK,IAAI,QAAQ,UACb,WAAW;IAEnB;IACA,IAAI,CAAC,WACD,aAAa,SAAS,GAAG,KAAK,SAAS,CAAC,EAAE;AAElD;AAEA","sources":["src/script.js"],"sourcesContent":["// nodes\r\nconst form = document.body.querySelector(\".entry-field\");\r\nconst booksContainer = document.body.querySelector(\".library__items\");\r\nconst deleteLibraryButton = document.body.querySelector(\".button--delete\");\r\nconst errorMessage = document.body.querySelector(\".error-message\");\r\n\r\nlet myLibrary = [];\r\n\r\nfunction Book(id, name, author, status) {\r\n  this.id = id;\r\n  this.name = name;\r\n  this.author = author;\r\n  this.status = status;\r\n  this.toggleStatus = function () {\r\n    this.status = this.status === \"read\" ? \"unread\" : \"read\";\r\n  };\r\n}\r\n\r\nfunction addBookToLibrary(event) {\r\n  const formData = new FormData(event.target);\r\n  const newBookData = Object.fromEntries(formData);\r\n  newBookData.id = myLibrary.length + 1;\r\n  const { id, name, author, status } = newBookData;\r\n  console.log(name, author)\r\n  if (name === '' || author === '') {\r\n    errorMessage.textContent = 'Error: fill in all fields of the form';\r\n    return;\r\n  }\r\n  errorMessage.textContent = '';\r\n  const newBook = new Book(id, name, author, status);\r\n  myLibrary.push(newBook);\r\n  event.target.reset();\r\n  renderBook(newBook);\r\n  addDeleteBookEvent(id);\r\n  addToggleStatusBookEvent(id);\r\n  updateLocalStorage();\r\n}\r\n\r\nfunction renderBook(newBook) {\r\n  const { id, name, author, status } = newBook;\r\n  booksContainer.insertAdjacentHTML(\r\n    \"beforeend\",\r\n    `\r\n      <tr class=\"library__item\" data-id=${id}>\r\n        <td>${name}</td>\r\n        <td>${author}</td>\r\n        <td><button class=\"button button--status\">${status}</button></td>\r\n        <td><button class=\"button button--remove\">delete</button></td>\r\n      </tr>\r\n    `\r\n  );\r\n}\r\n\r\nfunction addDeleteBookEvent(id) {\r\n  const removeCurrentBtn = document.querySelector(\r\n    `[data-id='${id}'] .button--remove`\r\n  );\r\n  removeCurrentBtn.addEventListener(\"click\", () => {\r\n    const currentBook = removeCurrentBtn.closest(\".library__item\");\r\n    currentBook.remove();\r\n    myLibrary = myLibrary.filter((item) => item.id !== id);\r\n    updateLocalStorage();\r\n  });\r\n}\r\n\r\nfunction addToggleStatusBookEvent(id) {\r\n  const statusCurrentBtn = document.querySelector(\r\n    `[data-id='${id}'] .button--status`\r\n  );\r\n  statusCurrentBtn.addEventListener(\"click\", () => {\r\n    statusCurrentBtn.textContent =\r\n      statusCurrentBtn.textContent === \"read\" ? \"unread\" : \"read\";\r\n    myLibrary = myLibrary.map((item) => {\r\n      if (item.id === id) {\r\n        item.toggleStatus();\r\n      }\r\n      return item;\r\n    });\r\n    updateLocalStorage();\r\n  });\r\n}\r\n\r\nfunction updateLocalStorage() {\r\n    localStorage.myLibrary = JSON.stringify(myLibrary);\r\n}\r\n\r\nfunction deleteLocalStorage() {\r\n    localStorage.myLibrary = JSON.stringify([]);\r\n}\r\n\r\nform.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  addBookToLibrary(event);\r\n});\r\n\r\ndeleteLibraryButton.addEventListener(\"click\", () => {\r\n    form.reset();\r\n    myLibrary = [];\r\n    booksContainer.innerHTML = \"\";\r\n    deleteLocalStorage();\r\n});\r\n\r\nfunction initApp() {\r\n    const localData = localStorage.myLibrary;\r\n    if (localData) {\r\n        myLibrary = JSON.parse(localStorage.myLibrary);\r\n        for (let item of myLibrary) {\r\n            renderBook(item);\r\n        }\r\n    }\r\n    if (!localData) {\r\n        localStorage.myLibrary = JSON.stringify([]);\r\n    }\r\n}\r\n\r\ninitApp();\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}